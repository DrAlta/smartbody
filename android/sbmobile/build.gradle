buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
    }
}
apply plugin: 'com.android.library'
repositories {
    google()
	jcenter()
	maven {
        url "https://jitpack.io"
    }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
	implementation 'org.codehaus.groovy:groovy-all:2.4.12'
}


android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        multiDexEnabled true
		
		 ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            // jni.srcDirs 'jni'
            // jni.exclude '**/**'
            jniLibs.srcDir 'libs' // <-- Set your folder here!
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
	
	lintOptions {
      abortOnError false
  }
}


task deleteJar(type: Delete) {
    delete 'output_libs/sbmobile.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('output_libs/')
    include('classes.jar')
    rename('classes.jar', 'sbmobile.jar')
}

createJar.dependsOn(deleteJar, build)

